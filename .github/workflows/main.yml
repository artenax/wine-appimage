# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ test2 ]
  pull_request:
    branches: [ test2 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Prerequisites
        run: |
          wget https://github.com/AppImageCrafters/appimage-builder/releases/download/Continuous/appimage-builder-0.9.0-3a07126-x86_64.AppImage -O appimage-builder ; chmod +x appimage-builder ; sudo mv appimage-builder /usr/bin
          mkdir -p /usr/share/icons/hicolor/scalable/ ; cp wine.svg /usr/share/icons/hicolor/scalable/
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage && chmod +x appimagetool-x86_64.AppImage
          mv appimagetool-x86_64.AppImage appimagetool && sudo mv appimagetool /usr/bin

      # Runs a set of commands using the runners shell
      - name: Build appimage
        run: |
          # add dir dist
          mkdir dist

          # stable
          WINE_VER="$(wget -qO- https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/ | grep wine-stable | sed 's|_| |g;s|~| |g' | awk '{print $5}' | tail -n1)"
          appimage-builder --skip-tests --skip-appimage --recipe wine-stable.yml
          export ARCH=x86_64; appimagetool -v ./AppDir -u "gh-releases-zsync|mmtrt|WINE_AppImage|continuous|wine-stable*.AppImage.zsync" wine-stable_${WINE_VER}-${ARCH}.AppImage
          mv *AppImage* dist/.

          # devel
          WINE_VER="$(wget -qO- https://dl.winehq.org/wine-builds/ubuntu/dists/bionic/main/binary-amd64/ | grep wine-devel | sed 's|_| |g;s|~| |g' | awk '{print $5}' | tail -n1)"
          appimage-builder --skip-tests --skip-appimage --recipe wine-devel.yml
          export ARCH=x86_64; appimagetool -v ./AppDir -u "gh-releases-zsync|mmtrt|WINE_AppImage|continuous|wine-devel*.AppImage.zsync" wine-devel_${WINE_VER}-${ARCH}.AppImage
          mv *AppImage* dist/.

          # staging
          WINE_VER="$(wget -qO- https://dl.winehq.org/wine-builds/ubuntu/dists/bionic/main/binary-amd64/ | grep wine-staging | sed 's|_| |g;s|~| |g' | awk '{print $5}' | tail -n1)"
          appimage-builder --skip-tests --skip-appimage --recipe wine-staging.yml
          export ARCH=x86_64; appimagetool -v ./AppDir -u "gh-releases-zsync|mmtrt|WINE_AppImage|continuous|wine-staging*.AppImage.zsync" wine-staging_${WINE_VER}-${ARCH}.AppImage
          mv *AppImage* dist/.

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: wine-continuous-x86_64.AppImage
          path: 'dist'

  release:
      needs: [build]
      runs-on: ubuntu-latest

      steps:
        - uses: actions/download-artifact@v1
          with:
            name: wine-continuous-x86_64.AppImage

        - name: Release
          uses: marvinpinto/action-automatic-releases@latest
          with:
            title: Continuous build
            automatic_release_tag: continuous
            prerelease: false
            draft: false
            files: |
              wine-continuous-x86_64.AppImage
            repo_token: ${{ secrets.GITHUB_TOKEN }}
